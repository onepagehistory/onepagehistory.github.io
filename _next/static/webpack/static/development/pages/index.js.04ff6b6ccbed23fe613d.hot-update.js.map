{"version":3,"file":"static/webpack/static/development/pages/index.js.04ff6b6ccbed23fe613d.hot-update.js","sources":["webpack:///./src/App.tsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { Card } from './Card/Card';\nimport { Search } from './Search/Search';\nimport { data } from './data';\nimport { Scales } from './Scales/Scales';\nimport Head from 'next/head';\nimport './App.scss';\n\nclass App extends Component<any, any> {\n  render() {\n    return (\n      <div className=\"App\">\n        <Head>\n            <meta charSet=\"UTF-8\" />\n            <title>One Page History</title>\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=yes\" />\n            <base  href=\"/\" />\n            {/* manifest.json provides metadata used when your web app is added to the\n            homescreen on Android. See https://developers.google.com/web/fundamentals/engage-and-retain/web-app-manifest/ */}\n            <link rel=\"manifest\" href=\"/static/manifest.json\" />\n            <link rel=\"shortcut icon\" href=\"/static/favicon.ico\"></link>\n\n            { /** GOOGLE ANALYTICS {{{\n                * NOTE: [kos] adding google analitics only for production\n                *     would be nice to:\n                *     - do not download ga script for dev at all\n                *     - remove % NODE_ENV % reference from here\n                */\n                // !siteData.dev &&\n                <React.Fragment>\n                    <script async={true} src='https://www.google-analytics.com/analytics.js'></script>\n                    <script async={true} src=\"/autotrack.js\" />\n                    <script src=\"/GA.js\" />\n                </React.Fragment>\n              /* GOOGLE ANALYTICS }}} */\n            }\n\n        </Head>\n        <header className=\"App__Header\">\n            <Search />\n        </header>\n        <section className=\"App__Body\">\n            <div className=\"App__Events\">{\n                data.entries.filter(entry=>entry.name).map(entry=>\n                    <Card\n                        key={entry.name}\n                        entry={entry}\n                    />\n                )\n            }</div>\n            <div className=\"App__Scales\">\n                <Scales from={-33100} to={ (new Date()).getFullYear() }/>\n            </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;;;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAtBA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAhDA;AACA;AAkDA;;;;A","sourceRoot":""}